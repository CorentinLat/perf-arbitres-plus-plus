name: "Perf'Arbitres++ Release"

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  get-release-version:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Get Package Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@main

    outputs:
      version: ${{ steps.package-version.outputs.current-version }}

  archive-source-code:
    needs: get-release-version

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Archive ZIP
        if: steps.archive-source-code.outputs.cache-hit != 'true'
        uses: thedoctor0/zip-release@main
        with:
          type: zip
          filename: Source_code.zip
          exclusions: "*.git* .editorconfig"

      - name: Upload source code archive
        uses: actions/upload-artifact@v2
        with:
          name: source_code-zip-${{ needs.get-release-version.outputs.version }}
          path: Source_code.zip

  build-windows-executable:
    needs: get-release-version

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm i

      - name: Build the app
        run: npm run package

      - name: Upload windows executable
        uses: actions/upload-artifact@v2
        with:
          name: executable-win-${{ needs.get-release-version.outputs.version }}
          path: release/build/PerfArbitresPlusPlus Setup ${{ needs.get-release-version.outputs.version }}.exe

  build-macos-executable:
    needs: get-release-version

    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm i && npm i -D cli-truncate iconv-corefoundation

      - name: Build the app
        run: USE_HARD_LINKS=false npm run package

      - name: Upload mac executable
        uses: actions/upload-artifact@v2
        with:
          name: executable-mac-${{ needs.get-release-version.outputs.version }}
          path: release/build/PerfArbitresPlusPlus-${{ needs.get-release-version.outputs.version }}.dmg

  build-linux-executable:
    needs: get-release-version

    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Use Node.js 16
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: Install Dependencies
        run: npm i

      - name: Build the app
        run: USE_HARD_LINKS=false npm run package

      - name: Upload linux executable
        uses: actions/upload-artifact@v2
        with:
          name: executable-linux-${{ needs.get-release-version.outputs.version }}
          path: release/build/PerfArbitresPlusPlus-${{ needs.get-release-version.outputs.version }}.AppImage

  create-release:
    needs:
      - get-release-version
      - archive-source-code
      - build-windows-executable
      - build-macos-executable
      - build-linux-executable

    runs-on: ubuntu-latest

    steps:
      - name: Download source code archive
        uses: actions/download-artifact@v2
        with:
          name: source_code-zip-${{ needs.get-release-version.outputs.version }}

      - name: Download windows executable
        uses: actions/download-artifact@v2
        with:
          name: executable-win-${{ needs.get-release-version.outputs.version }}

      - name: Download mac executable
        uses: actions/download-artifact@v2
        with:
          name: executable-mac-${{ needs.get-release-version.outputs.version }}

      - name: Download linux executable
        uses: actions/download-artifact@v2
        with:
          name: executable-linux-${{ needs.get-release-version.outputs.version }}

      - name: Create Release with Source code
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.get-release-version.outputs.version }}
          commit: ${{ github.sha }}
          name: Perf'Arbitres++ ${{ needs.get-release-version.outputs.version }}
          artifacts: Source_code.zip,PerfArbitresPlusPlus Setup ${{ needs.get-release-version.outputs.version }}.exe,PerfArbitresPlusPlus-${{ needs.get-release-version.outputs.version }}.dmg,PerfArbitresPlusPlus-${{ needs.get-release-version.outputs.version }}.AppImage
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
